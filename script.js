// Global variables
let currentSlideIndex = 0;
let slideInterval;
let userRegistered = false;

// Full services data
const servicesData = [
    {
        title: "ркжрк╛ркЦрк▓рлЛ",
        titleEn: "Certificates",
        description: "ркдркорк╛рко рккрлНрк░ркХрк╛рк░ркирк╛ рк╕рк░ркХрк╛рк░рлА ркжрк╛ркЦрк▓рлЛ ркорлЗрк│рк╡рлЛ",
        icon: "file-text",
        subServices: [
            { name: "ркЖрк╡ркХркирлБркВ ркжрк╛ркЦрк▓рлЛ", nameEn: "Income Certificate", description: "ркЖрк╡ркХркирк╛ рккрлБрк░рк╛рк╡рк╛ ркорк╛ркЯрлЗ" },
            { name: "ркЬрк╛ркдрк┐ркирлБркВ ркжрк╛ркЦрк▓рлЛ", nameEn: "Caste Certificate", description: "ркЬрк╛ркдрк┐ркирк╛ рккрлБрк░рк╛рк╡рк╛ ркорк╛ркЯрлЗ" },
            { name: "ркЬркирлНрко ркжрк╛ркЦрк▓рлЛ", nameEn: "Birth Certificate", description: "ркЬркирлНркоркирк╛ рккрлБрк░рк╛рк╡рк╛ ркорк╛ркЯрлЗ" },
            { name: "ркорлГркдрлНркпрлБ ркжрк╛ркЦрк▓рлЛ", nameEn: "Death Certificate", description: "ркорлГркдрлНркпрлБркирк╛ рккрлБрк░рк╛рк╡рк╛ ркорк╛ркЯрлЗ" },
            { name: "ркмрк┐рки ркЕркирк╛ркоркд ркжрк╛ркЦрк▓рк╛", nameEn: "Non-reserved instance", description: "ркмрк┐рки ркЕркирк╛ркоркд ркжрк╛ркЦрк▓рк╛ ркорк╛ркЯрлЗ" },
            { name: "рлзрлж% (E.W.S.)ркЕркирк╛ркоркд рк╡ркЧркирк╛ ркжрк╛ркЦрк▓рк╛", nameEn: "10% (E.W.S.) Reservation Scheme Example", description: "рлзрлж% (E.W.S.)ркЕркирк╛ркоркд ╨▓╨╗╨╕╤Пркирк╛ ркжрк╛ркЦрк▓рк╛ ркорк╛ркЯрлЗ" },
            { name: "ркбрлЛркорлАрк╕рк╛ркИрк▓ рк╕рк░рлНркЯрлА", nameEn: "Domicile Certificate", description: "ркбрлЛркорлАрк╕рк╛ркИрк▓ рк╕рк░рлНркЯрлА ркорк╛ркЯрлЗ" },
            { name: "ркирлЛрки ркХрлНрк░рк┐ркорлАрк▓рлЗркпрк░ рк╕рк░рлНркЯрлА", nameEn: "Non-creamy layer Certificate", description: "ркирлЛрки ркХрлНрк░рк┐ркорлАрк▓рлЗркпрк░ рк╕рк░рлНркЯрлА ркорк╛ркЯрлЗ" },
            { name: "рк╕рлАркирлАркпрк░ рк╕рлАркЯрлАркЭрки рккрлНрк░ркорк╛ркгрккркдрлНрк░ ", nameEn: "Senior Citizen Certificate", description: "рк╕рлАркирлАркпрк░ рк╕рлАркЯрлАркЭрки рккрлНрк░ркорк╛ркгрккркдрлНрк░ ркорк╛ркЯрлЗ" },
            { name: "рк╡рк┐ркЪрк░ркдрлА-рк╡рк┐ркорлБркХрлНркд ркЬрк╛ркдрк┐ ркжрк╛ркЦрк▓рлЛ ", nameEn: "NT-DNT Certificate", description: "рк╡рк┐ркЪрк░ркдрлА-рк╡рк┐ркорлБркХрлНркд ркЬрк╛ркдрк┐ ркжрк╛ркЦрк▓рлЛ ркорк╛ркЯрлЗ" }
        ]
    },
    {
        title: "рк╕рк╣рк╛ркп",
        titleEn: "Assistance Services",
        description: "рк╕рк╣рк╛ркп рк╕ркВркмркВркзрк┐ркд ркдркорк╛рко рк╕рлЗрк╡рк╛ркУ",
        icon: "credit-card",
        subServices: [
            { name: "рк╡рк┐ркзрк╡рк╛ рк╕рк╣рк╛ркп ркорк╛ркЯрлЗ", nameEn: "For widow assistance", description: "рк╡рк┐ркзрк╡рк╛ рк╕рк╣рк╛ркп ркорк╛ркЯрлЗ" },
            { name: "рк╡рлНрк░рлБркзрлНркз рккрлЗркирлНрк╕рки ркорк╛ркЯрлЗ", nameEn: "pension assistance", description: "рк╡рлНрк░рлБркзрлНркз рк╕рк╣рк╛ркп ркорк╛ркЯрлЗ" },
            { name: "рк╡рлНрк╣рк╛рк▓рлА ркжрлАркХрк░рлА рк╕рк╣рк╛ркп", nameEn: "Dear Daughter", description: "рк╡рлНрк╣рк╛рк▓рлА ркжрлАркХрк░рлА рк╕рк╣рк╛ркп ркорк╛ркЯрлЗ" },
            { name: "ркХрлБрк╡рк░ркмрк╛ркИ ркорк╛ркорлЗрк░рлБ рк╕рк╣рк╛ркп", nameEn: "Kuvarbai Mameru", description: "ркХрлБрк╡рк░ркмрк╛ркИ ркорк╛ркорлЗрк░рлБ рк╕рк╣рк╛ркп ркорк╛ркЯрлЗ" }
        ]
    },
    {
        title: "ркУркирк▓рк╛ркЗрки рк╕рлЗрк╡рк╛ркУ",
        titleEn: "Online Services",
        description: "ркдркорк╛рко рккрлНрк░ркХрк╛рк░ркирк╛ рк╕рк░ркХрк╛рк░рлА ркУркирк▓рк╛ркЗрки ркорлЗрк│рк╡рлЛ",
        icon: "settings",
        subServices: [
            { name: "рккрк╛рк╕рккрлЛрк░рлНркЯ рк╕рлЗрк╡рк╛ркУ", nameEn: "Passport Services", description: "рккрк╛рк╕рккрлЛрк░рлНркЯ ркЕрк░ркЬрлА ркЕркирлЗ рк╕рлЗрк╡рк╛ркУ" },
            { name: "рк╡рлЛркЯрк░ ркЖркИркбрлА", nameEn: "Voter ID", description: "ркоркдркжрк╛рк░ ркУрк│ркЦ ркХрк╛рк░рлНркб рк╕рлЗрк╡рк╛ркУ" },
            { name: "ркЗ -рк╢рлНрк░рко ркХрк╛рк░рлНркб", nameEn: "E-shram card", description: "ркоркдркжрк╛рк░ ркУрк│ркЦ ркХрк╛рк░рлНркб рк╕рлЗрк╡рк╛ркУ" },
            { name: "ркЙркжрлНркпрко ркЖркзрк╛рк░", nameEn: "udyam aadhar", description: "ркЙркжрлНркпрко ркЖркзрк╛рк░ ркорк╛ркЯркирк╛ рккрк░рк╛рк╡рк╛ ркирлА ркпрк╛ркжрлА" }
        ]
    },
    {
        title: "ркЕркирлНркп рк╕рлЗрк╡рк╛ркУ",
        titleEn: "Other Services",
        description: "ркдркорк╛рко рккрлНрк░ркХрк╛рк░ркирк╛ рк╕рк░ркХрк╛рк░рлА ркЕркирлНркп ркорлЗрк│рк╡рлЛ",
        icon: "settings",
        subServices: [
            { name: "рк▓рк╛ркЗркЯ ркХркирлЗркХрлНрк╢рки", nameEn: "Light connection", description: "рк▓рк╛ркЗркЯ ркХркирлЗркХрлНрк╢рки" },
            { name: "рккрк╛рки ркХрк╛рк░рлНркб - ркирк╡рлБркВ ркЕркирлЗ рк╕рлБркзрк╛рк░ркгрк╛", nameEn: "Pan Card -New and Correction", description: "рккрк╛рки ркХрк╛рк░рлНркб - ркирк╡рлБркВ ркЕркирлЗ рк╕рлБркзрк╛рк░ркгрк╛ рк╕рлЗрк╡рк╛ркУ" },
            { name: "ркнрк╛ркбрк╛ ркХрк░рк╛рк░", nameEn: "Rent Agreement", description: "ркнрк╛ркбрк╛ ркХрк░рк╛рк░ рк╕рлЗрк╡рк╛ркУ" },
            { name: "рк░рлЗрк╢рки ркХрк╛рк░рлНркб", nameEn: "Ration Card", description: "рк░рлЗрк╢рки ркХрк╛рк░рлНркб ркЕрк░ркЬрлА ркЕркирлЗ рк╕рлЗрк╡рк╛ркУ" },
            { name: "ркнрк╛ркЧрлАркжрк╛рк░рлА ркжрк╕рлНркдрк╛рк╡рлЗркЬ", nameEn: "PARTNARSHIP DEED", description: "ркнрк╛ркЧрлАркжрк╛рк░рлА ркжрк╕рлНркдрк╛рк╡рлЗркЬ" }
        ]
    }
];

// Initialize the application
document.addEventListener('DOMContentLoaded', function() {
    initializeSlider();
    checkUserRegistration();
    setupEventListeners();
});

// Hero Slider Functions
function initializeSlider() {
    const slides = document.querySelectorAll('.slide');
    const indicators = document.querySelectorAll('.indicator');
    slideInterval = setInterval(nextSlide, 5000);

    function resetInterval() {
        clearInterval(slideInterval);
        slideInterval = setInterval(nextSlide, 5000);
    }

    document.querySelector('.nav-prev').addEventListener('click', () => {
        previousSlide();
        resetInterval();
    });

    document.querySelector('.nav-next').addEventListener('click', () => {
        nextSlide();
        resetInterval();
    });

    indicators.forEach((indicator, index) => {
        indicator.addEventListener('click', () => {
            currentSlide(index + 1);
            resetInterval();
        });
    });
}

function showSlide(index) {
    const slides = document.querySelectorAll('.slide');
    const indicators = document.querySelectorAll('.indicator');
    slides.forEach(slide => slide.classList.remove('active'));
    indicators.forEach(indicator => indicator.classList.remove('active'));
    slides[index].classList.add('active');
    indicators[index].classList.add('active');
}

function nextSlide() {
    const slides = document.querySelectorAll('.slide');
    currentSlideIndex = (currentSlideIndex + 1) % slides.length;
    showSlide(currentSlideIndex);
}

function previousSlide() {
    const slides = document.querySelectorAll('.slide');
    currentSlideIndex = (currentSlideIndex - 1 + slides.length) % slides.length;
    showSlide(currentSlideIndex);
}

function currentSlide(index) {
    currentSlideIndex = index - 1;
    showSlide(currentSlideIndex);
}

// User Registration
function checkUserRegistration() {
    const userData = localStorage.getItem('pragalbhUserData');
    if (userData) {
        userRegistered = true;
        showServices();
    } else {
        setTimeout(() => {
            if (!userRegistered) {
                showModal();
            }
        }, 2000);
    }
}

// Form for WhatsApp Request
function showRequestForm(serviceName) {
    const formHtml = `
        <div class="form-overlay" id="form-overlay">
            <div class="form-popup">
                <h3>${serviceName} ркорк╛ркЯрлЗ ркЕрк░ркЬрлА ркХрк░рлЛ</h3>
                <form id="userRequestForm">
                    <label for="username">ркирк╛рко:</label>
                    <input type="text" id="username" name="username" required>
                    <label for="usernumber">WhatsApp ркиркВркмрк░:</label>
                    <input type="tel" id="usernumber" name="usernumber" required pattern="[0-9]{10}" placeholder="10 ркЕркВркХ ркжрк╛ркЦрк▓ ркХрк░рлЛ">
                    <button type="submit">ркорлЛркХрк▓рлЛ</button>
                    <button type="button" onclick="closeRequestForm()">ркмркВркз ркХрк░рлЛ</button>
                </form>
            </div>
        </div>`;

    const formContainer = document.createElement('div');
    formContainer.innerHTML = formHtml;
    document.body.appendChild(formContainer);

    const form = document.getElementById("userRequestForm");
    form.addEventListener("submit", function (event) {
        event.preventDefault();
        const number = form.usernumber.value.trim();
        const name = form.username.value.trim();
        sendDocumentsToWhatsapp(serviceName, number, name);
        closeRequestForm();
    });
}

function closeRequestForm() {
    const overlay = document.getElementById("form-overlay");
    if (overlay) overlay.remove();
}

function sendDocumentsToWhatsapp(serviceName, whatsappNumber, username = "") {
    const matchingKey = Object.keys(documentRequirements).find(key => key.includes(serviceName)) || serviceName;
    let documents = documentRequirements[matchingKey];

    if (!documents) {
        documents = ["ркжрк╕рлНркдрк╛рк╡рлЗркЬрлЛркирлА ркорк╛рк╣рк┐ркдрлА ркЙрккрк▓ркмрлНркз ркиркерлА."];
    }

    const message = `ЁЯУМ *${serviceName}* ркорк╛ркЯрлЗ ркЕрк░ркЬрлА ркХрк░рк╡рлА ркЫрлЗ.
ЁЯСд ркирк╛рко: ${username}
ЁЯУ▒ рк╡рлЛркЯрлНрк╕ркПркк ркиркВркмрк░: ${whatsappNumber}

ЁЯУЭ ркЬрк░рлВрк░рлА ркжрк╕рлНркдрк╛рк╡рлЗркЬрлЛ:
${documents.map((doc, i) => `${i + 1}. ${doc}`).join('\n')}
\nЁЯУНPragalbh Associates\nЁЯУЮ 9898329056`;

    const url = `https://wa.me/91${whatsappNumber}?text=${encodeURIComponent(message)}`;
    window.open(url, '_blank');
}

function handleServiceRequest(serviceName) {
    showRequestForm(serviceName);
}
